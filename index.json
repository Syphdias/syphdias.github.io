[{"content":"I recently revived my Synology D415+ NAS from silicon death and it looks like it works fine again. When I bought it, I wanted to be able to run any docker image. Which is why I opted for Atom instead of ARM. Which is also why I upgraded RAM to 8GB. The disks basically never spun down which made it quite noisy. Now, I just want it to be silent, if not in use.\nI initially thought I could replace the DiskStation Manager (DSM) with a proper Linux but from what I gathered, it is \u0026ldquo;not doable without deeper knowledge\u0026rdquo;.\nAdjusting Fans I only inserted the first SSD so far and installed DSM 7.0 on it. The only audible sound was the fans spinning and I found a guide to use a custom fan profile to turn them off completely for low loads.\nStep one: Set \u0026ldquo;Fan Speed Mode\u0026rdquo; to \u0026ldquo;Quiet mode\u0026rdquo; via the GUI in \u0026ldquo;Hardware \u0026amp; Power\u0026rdquo;. This can also be done by setting\nStep two: Turning off fan check to allow for 0 speed operations.\n# cat /usr/local/etc/rc.d/fan_check_disable.sh \u0026lt;\u0026lt;EOF #!/bin/sh echo 0 \u0026gt; /sys/module/avoton_synobios/parameters/check_fan EOF # chmod 755 /usr/local/etc/rc.d/fan_check_disable.sh Step three: Backup /usr/syno/etc.defaults/scemd.xml and usr/syno/etc/scemd.xml Step four: Adjust fan profile as described in the guide with some modifications in /usr/syno/etc.defaults/scemd.xml and usr/syno/etc/scemd.xml.\n--- /usr/syno/etc/scemd.xml_2022-04-23\t2021-10-18 15:26:05.000000000 +0200 +++ /usr/syno/etc/scemd.xml\t2022-04-23 01:12:07.740595553 +0200 @@ -14,17 +14,21 @@  \u0026lt;cpu_temperature fan_speed=\u0026#34;99%40hz\u0026#34; action=\u0026#34;SHUTDOWN\u0026#34;\u0026gt;95\u0026lt;/cpu_temperature\u0026gt;  \u0026lt;/fan_config\u0026gt;  \u0026lt;fan_config period=\u0026#34;20\u0026#34; threshold=\u0026#34;6\u0026#34; type=\u0026#34;DUAL_MODE_LOW\u0026#34; hibernation_speed=\u0026#34;UNKNOWN\u0026#34;\u0026gt; -\t\u0026lt;disk_temperature fan_speed=\u0026#34;21%40hz\u0026#34; action=\u0026#34;NONE\u0026#34;\u0026gt;0\u0026lt;/disk_temperature\u0026gt; -\t\u0026lt;disk_temperature fan_speed=\u0026#34;35%40hz\u0026#34; action=\u0026#34;NONE\u0026#34;\u0026gt;42\u0026lt;/disk_temperature\u0026gt; -\t\u0026lt;disk_temperature fan_speed=\u0026#34;50%40hz\u0026#34; action=\u0026#34;NONE\u0026#34;\u0026gt;46\u0026lt;/disk_temperature\u0026gt; -\t\u0026lt;disk_temperature fan_speed=\u0026#34;70%40hz\u0026#34; action=\u0026#34;NONE\u0026#34;\u0026gt;53\u0026lt;/disk_temperature\u0026gt; +\t\u0026lt;disk_temperature fan_speed=\u0026#34;01%40hz\u0026#34; action=\u0026#34;NONE\u0026#34;\u0026gt;0\u0026lt;/disk_temperature\u0026gt; +\t\u0026lt;disk_temperature fan_speed=\u0026#34;10%40hz\u0026#34; action=\u0026#34;NONE\u0026#34;\u0026gt;41\u0026lt;/disk_temperature\u0026gt; +\t\u0026lt;disk_temperature fan_speed=\u0026#34;20%40hz\u0026#34; action=\u0026#34;NONE\u0026#34;\u0026gt;46\u0026lt;/disk_temperature\u0026gt; +\t\u0026lt;disk_temperature fan_speed=\u0026#34;35%40hz\u0026#34; action=\u0026#34;NONE\u0026#34;\u0026gt;48\u0026lt;/disk_temperature\u0026gt; +\t\u0026lt;disk_temperature fan_speed=\u0026#34;50%40hz\u0026#34; action=\u0026#34;NONE\u0026#34;\u0026gt;50\u0026lt;/disk_temperature\u0026gt; +\t\u0026lt;disk_temperature fan_speed=\u0026#34;70%40hz\u0026#34; action=\u0026#34;NONE\u0026#34;\u0026gt;54\u0026lt;/disk_temperature\u0026gt;  \u0026lt;disk_temperature fan_speed=\u0026#34;99%40hz\u0026#34; action=\u0026#34;NONE\u0026#34;\u0026gt;58\u0026lt;/disk_temperature\u0026gt;  \u0026lt;disk_temperature fan_speed=\u0026#34;99%40hz\u0026#34; action=\u0026#34;SHUTDOWN\u0026#34;\u0026gt;61\u0026lt;/disk_temperature\u0026gt;  -\t\u0026lt;cpu_temperature fan_speed=\u0026#34;21%40hz\u0026#34; action=\u0026#34;NONE\u0026#34;\u0026gt;0\u0026lt;/cpu_temperature\u0026gt; -\t\u0026lt;cpu_temperature fan_speed=\u0026#34;50%40hz\u0026#34; action=\u0026#34;NONE\u0026#34;\u0026gt;50\u0026lt;/cpu_temperature\u0026gt; -\t\u0026lt;cpu_temperature fan_speed=\u0026#34;99%40hz\u0026#34; action=\u0026#34;NONE\u0026#34;\u0026gt;85\u0026lt;/cpu_temperature\u0026gt; -\t\u0026lt;cpu_temperature fan_speed=\u0026#34;99%40hz\u0026#34; action=\u0026#34;SHUTDOWN\u0026#34;\u0026gt;95\u0026lt;/cpu_temperature\u0026gt; +\t\u0026lt;cpu_temperature fan_speed=\u0026#34;01%40hz\u0026#34; action=\u0026#34;NONE\u0026#34;\u0026gt;0\u0026lt;/cpu_temperature\u0026gt; +\t\u0026lt;cpu_temperature fan_speed=\u0026#34;10%40hz\u0026#34; action=\u0026#34;NONE\u0026#34;\u0026gt;57\u0026lt;/cpu_temperature\u0026gt; +\t\u0026lt;cpu_temperature fan_speed=\u0026#34;20%40hz\u0026#34; action=\u0026#34;NONE\u0026#34;\u0026gt;62\u0026lt;/cpu_temperature\u0026gt; +\t\u0026lt;cpu_temperature fan_speed=\u0026#34;50%40hz\u0026#34; action=\u0026#34;NONE\u0026#34;\u0026gt;65\u0026lt;/cpu_temperature\u0026gt; +\t\u0026lt;cpu_temperature fan_speed=\u0026#34;99%40hz\u0026#34; action=\u0026#34;NONE\u0026#34;\u0026gt;80\u0026lt;/cpu_temperature\u0026gt; +\t\u0026lt;cpu_temperature fan_speed=\u0026#34;99%40hz\u0026#34; action=\u0026#34;SHUTDOWN\u0026#34;\u0026gt;90\u0026lt;/cpu_temperature\u0026gt;  \u0026lt;/fan_config\u0026gt;   \u0026lt;fan_config hw_version=\u0026#34;Synology-DX5\u0026#34; period=\u0026#34;20\u0026#34; threshold=\u0026#34;6\u0026#34; type=\u0026#34;DUAL_MODE_HIGH_EBOX\u0026#34; hibernation_speed=\u0026#34;FULL\u0026#34;\u0026gt; Step five: Reboot NAS\nAdding Disks If you checked out the source for the fan profile, you might have noticed that I skipped something more obvious. The IronWolf drives I bought are really loud when spun up – louder than the stock fan configuration in fact. For quiet operation they need to spin down when idle.\nLooking at the md configuration I noticed something odd.\n# cat /proc/mdstat Personalities : [raid1] md2 : active raid1 sda3[0]  239376512 blocks super 1.2 [1/1] [U] md1 : active raid1 sda2[0]  2097088 blocks [4/1] [U___] md0 : active raid1 sda1[0]  2490176 blocks [4/1] [U___] unused devices: \u0026lt;none\u0026gt; The first SSD (sda) I inserted was split into 3 partitions and turned into 3 arrays. md2 was the main bulk and what will is volume1. It is not mounted directly to /volume1 tough, but through /dev/mapper/cachedev_0. I assume this is to enable adding a caching device later (which makes no sense in this case) to be more flexible.\n# df -h /volume1/ Filesystem Size Used Avail Use% Mounted on /dev/mapper/cachedev_0 220G 92G 101G 48% /volume1 # ls -l /dev/mapper/cachedev_0 /dev/md2 brw------- 1 root root 253, 0 Apr 23 11:58 /dev/mapper/cachedev_0 brw------- 1 root root 9, 2 Apr 23 11:58 /dev/md2 # dmsetup ls --tree # ^^^^^^ notice major and minor device numbers match up cachedev_0 (253:0)  └─ (9:2) md0(sda1) is used for / while I could not exactly figure out what md1(sda2) was used for – I read it was swap somewhere but I could not verify that, so don\u0026rsquo;t quote me on that.\n# df -h / Filesystem Size Used Avail Use% Mounted on /dev/md0 2.3G 1.2G 1.1G 52% / Notice [U___] on both md0 and md1 and what happens after I insert a second SSD and configure it as Storage Pool 2 (no volume) via the GUI.\n# cat /proc/mdstat Personalities : [raid1] md3 : active raid1 sdb3[0]  120212800 blocks super 1.2 [1/1] [U] md2 : active raid1 sda3[0]  239376512 blocks super 1.2 [1/1] [U] md1 : active raid1 sdb2[4] sda2[0]  2097088 blocks [4/1] [U___]  [=======\u0026gt;.............] recovery = 37.0% (776576/2097088) finish=0.5min speed=36979K/sec md0 : active raid1 sdb1[4] sda1[0]  2490176 blocks [4/1] [U___]  [=====\u0026gt;...............] recovery = 28.7% (716928/2490176) finish=0.9min speed=32587K/sec unused devices: \u0026lt;none\u0026gt; # cat /proc/mdstat Personalities : [raid1] md3 : active raid1 sdb3[0]  120212800 blocks super 1.2 [1/1] [U] md2 : active raid1 sda3[0]  239376512 blocks super 1.2 [1/1] [U] md1 : active raid1 sdb2[1] sda2[0]  2097088 blocks [4/2] [UU__] md0 : active raid1 sdb1[1] sda1[0]  2490176 blocks [4/2] [UU__] unused devices: \u0026lt;none\u0026gt; Initializing the new disk resulted in it being split into three partitions as well. It added the first two partitions to the RAID1 arrays md0 and md1 and left the third partition for usage. This is kind of clever. After the initial array sync – took a few seconds –, I could now remove the first SSD, if I wanted without losing my operating system. I would still lose everything I installed on the volume from this disk though. Indeed, this happens to every disk I insert and initialize a storage pool on.\nI inserted my 2 10T HDDs now, and indeed they undergo the same procedure. The array sync took about 1-2 minutes this time and I ended up with md4 and 2 more members for md0 and md1.\n# cat /proc/mdstat Personalities : [raid1] md4 : active raid1 sdd3[1] sdc3[0]  9761614848 blocks super 1.2 [2/2] [UU] [...] md1 : active raid1 sdd2[3] sdc2[2] sdb2[1] sda2[0]  2097088 blocks [4/4] [UUUU] md0 : active raid1 sdd1[3] sdc1[2] sdb1[1] sda1[0]  2490176 blocks [4/4] [UUUU] [...] This is great for simplicity and redundancy. I can yank any 3 disks and my system keeps running. But what if anything is read or written to the system disk? I expect this to hinder hibernation and spin down quite a bit.\nDebugging HDD Hibernation Part 1 I found the tool /usr/syno/sbin/syno_hibernation_debug to analyse hibernation fails (1 for \u0026ldquo;Cannot Enter Hibernation\u0026rdquo; or 2 for \u0026ldquo;Which Interrupt Hibernation\u0026rdquo;). The older one used in many forum posts was and no longer available (syno_hibernate_debug_tool --enable 1)\nI enabled de debug log by setting some options in /etc/synoinfo.conf\nenable_hibernation_debug=\u0026#34;yes\u0026#34; hibernation_debug_level=\u0026#34;1\u0026#34; I tailed /var/log/hibernationFull.log to get a feel what happens. I stopped the tail after I realised that reading a file from the disk I want to see idle might not work very well.\nAfter about 600 seconds the disks spun down only to spin up again 30 seconds later. I looked at the hibernation log to see what had happened.\n[Sat Apr 23 15:42:15 2022] ppid:1(systemd), pid:22779(syno_hibernatio), dirtied inode 20738 (hibernation.log) on md0 [Sat Apr 23 15:42:15 2022] ppid:1(systemd), pid:22779(syno_hibernatio), dirtied inode 20738 (hibernation.log) on md0 [Sat Apr 23 15:42:15 2022] ppid:1(systemd), pid:22779(syno_hibernatio), dirtied inode 20738 (hibernation.log) on md0 [Sat Apr 23 15:42:15 2022] ppid:1(systemd), pid:22779(syno_hibernatio), dirtied inode 30536 (hibernationFull.log) on md0 [Sat Apr 23 15:42:15 2022] ppid:1(systemd), pid:22779(syno_hibernatio), dirtied inode 30536 (hibernationFull.log) on md0 [Sat Apr 23 15:42:15 2022] ppid:1(systemd), pid:22779(syno_hibernatio), dirtied inode 30536 (hibernationFull.log) on md0 Huh, that\u0026rsquo;s the pid for the /usr/syno/sbin/syno_hibernation_debug process. Did it wake itself up?\nI looked deeper into to syno_hibernation_debug script to find out what was going on. The script mainly took care of a few things:\n Reading configuration and running itself in the background if enable_hibernation_debug=\u0026quot;yes\u0026quot; was found and hibernation_debug_level was 1 or 2.  If not, it killed the running debug process   echo 1 \u0026gt; /proc/sys/vm/block_dump if enabled and echo 0 \u0026gt; /proc/sys/vm/block_dump if not it loops over /sys/block/sd{a..d}/device/syno_idle_time (in my case) to see if the idle time was below the configured standby time then it looks at dmesg | tail -500 it also writes to two log files (this should be find, it calls sync instantly afterwards and sleeps for 20s)  This is when I gave up on the script. There really is nothing too special about it that I cannot do by hand without waking the disks up by myself. But I still have the feeling that internals might be at play that will always sync the array at some point in time. I don\u0026rsquo;t want the system to be on HDDs.\nI tried again, this time by hand.\necho 1 \u0026gt; /proc/sys/vm/block_dump while sleep 1s; do cat /sys/block/sd{a..d}/device/syno_idle_time; echo; done This time is was something else.\n[Sat Apr 23 16:41:17 2022] ppid:1(systemd), pid:14381(scemd), dirtied inode 30475 (disk_overview.xml) on md0 [Sat Apr 23 16:41:17 2022] ppid:1(systemd), pid:14381(scemd), dirtied inode 30475 (disk_overview.xml) on md0 I wonder, if I missed this the first time, but dmesg does not go back far enough and I am not willing to spend the time again. The other reason is that I will definitely do something about the HDDs in the array. Simply ssh-ing to the NAS wakes it up – reading authorized_keys or something? Probably more, logging, etc.?\nRemoving HDDs from Array The fact that the idle times if all four disks (2xSSD, 2xHDD) were almost always in sync to the same value, makes me sure that with this configuration it will be very hard to achieve total silence with spin down or even debug it properly.\nI removed the HDD partitions form arrays md0 and md1.\nmdadm /dev/md0 --fail /dev/sdc1 mdadm /dev/md0 --remove /dev/sdc1 mdadm /dev/md0 --fail /dev/sdd1 mdadm /dev/md0 --remove /dev/sdd1  mdadm /dev/md1 --fail /dev/sdc2 mdadm /dev/md1 --remove /dev/sdc2 mdadm /dev/md1 --fail /dev/sdd2 mdadm /dev/md1 --remove /dev/sdd2 Resulting in this (notice that I ):\n# cat /proc/mdstat Personalities : [raid1] md4 : active raid1 sdd3[1] sdc3[0] 9761614848 blocks super 1.2 [2/2] [UU] [...] md1 : active raid1 sdb2[1] sda2[0] 2097088 blocks [4/2] [UU__] md0 : active raid1 sdb1[1] sda1[0] 2490176 blocks [4/2] [UU__] [...] Synology did not like that. Important: Do not shrink the arrays. I did so at first (mdadm /dev/md0 --grow -n 2, same for md1) but when I later rebooted the machine, it went to the setup wizard instead. Fixing this was easy: I shut down the NAS, removed the HDDs and booted again. After it was done, I inserted the HDDs again, and assembled the array again (can be done via GUI).\nAdvice: Do not do this – unless you are sure of the consequences it might have. I expect this to break with OS upgrades and the like. Same for fan profiles.\nI looked at idle times again and was pleased to see that ssh-ing to the machine only reset idle times for the remaining SSDs in the system arrays.\nSadly that did not last long since the idle time rose above 10 minutes without the disks spinning down. Did Synology stop tracking the disk for some reason?\nTime to postpone for this day.\nDebugging HDD Hibernation Part 2 I noticed when the HDD did spin down, looking at /sys/block/sd{a..d}/device/syno_idle_time took longer. So this does not count as something to interrupt the idle time but it does wake up the disk. The syno_hibernation_debug script basically only works for checking why a disk does not enter hibernation but not for what wakes it up, because it will wake the disk up itself. All debugging efforts basically lead to spin-up – the German wiki page on hibernation even touches on something like this briefly.\nNew approach: I disabled all debugging measures (including hibernation log), closed all ssh connections, closed the webinterface and check for open connections to the machine (lsof -i@$hostname_of_NAS). Time for some series, a 10-15 minute timer and listening if the disks spin down at some point. I left echo 1 \u0026gt; /proc/sys/vm/block_dump to check for what woke up the drives if they did.\nWith Advanced Sleep After waiting about ten minutes the disks spun down and the yellow LEDs went off (Status and disks) while the blue power LED stayed solid. The fans did not spin up. (There was some network activity I saw on my router at a later date, mainly ARP and NTP).\nWhen I connected to the web GUI after over an hour the disks spun up and the LED went back on. Looking at dmesg and searching for the HDDs I saw some activity I assume to be a result of waking up from deep sleep and checking if anything changed with the disks.\n[Sun Apr 24 17:15:56 2022] sd 5:0:0:0: [sdd] Write cache: enabled, read cache: enabled, doesn\u0026#39;t support DPO or FUA [Sun Apr 24 17:16:01 2022] sd 4:0:0:0: [sdc] Write cache: disabled, read cache: enabled, doesn\u0026#39;t support DPO or FUA [Sun Apr 24 17:16:02 2022] sd 5:0:0:0: [sdd] Write cache: disabled, read cache: enabled, doesn\u0026#39;t support DPO or FUA [Sun Apr 24 17:16:26 2022] ppid:2(kthreadd), pid:30085(kworker/3:0), READ block 8 on sdd3 (8 sectors) [Sun Apr 24 17:16:26 2022] ppid:2(kthreadd), pid:30085(kworker/3:0), READ block 8 on sdc3 (8 sectors) [Sun Apr 24 17:16:26 2022] ppid:2(kthreadd), pid:6707(md4_raid1), WRITE block 8 on sdd3 (1 sectors) [Sun Apr 24 17:16:26 2022] ppid:2(kthreadd), pid:6707(md4_raid1), WRITE block 8 on sdc3 (1 sectors) [Sun Apr 24 17:16:26 2022] ppid:2(kthreadd), pid:6707(md4_raid1), WRITE block 8 on sdd3 (1 sectors) [Sun Apr 24 17:16:26 2022] ppid:2(kthreadd), pid:6707(md4_raid1), WRITE block 8 on sdc3 (1 sectors) I waited until the disk were silent again and the LEDs went off and connected via ssh – again, disk spin.\n[Sun Apr 24 17:29:55 2022] sd 4:0:0:0: [sda] Write cache: enabled, read cache: enabled, doesn\u0026#39;t support DPO or FUA Without Advanced Sleep My hope was, by not going into deep sleep to not wake the HDDs from their spin-down when connecting to the GUI or via ssh. After waiting 10 minutes the disks spun down but all LEDs stayed on. About every 10 minutes the fans spun up for 2-3 minutes but the disks stayed spun down. My guess would be that not going into deeps sleep the CPU and maybe the SSDs needed more power wich lead to higher temperature and thus a higher cooling need.\nWhen I connected via ssh the HDDs spun up. There was nothing for the disks in dmesg what had accessed the disks.\nI waited for the disks to go silent again and tried the same with connecting via the GUI. Unfortunately, the disks ramped up again.\n[Sun Apr 24 18:42:59 2022] ppid:2(kthreadd), pid:30021(kworker/2:1), READ block 8 on sdb3 (8 sectors) [Sun Apr 24 18:42:59 2022] ppid:2(kthreadd), pid:30021(kworker/2:1), READ block 8 on sda3 (8 sectors) Hunting Ghosts This is where I put down my pen for now and talk about what I have learned on this adventure.\nI guess my initial assumption that the disks didn\u0026rsquo;t properly spin down was false. Maybe I had installed something that kept disks awake back then or didn\u0026rsquo;t properly configure hibernate. Either way, do not assume something is (still) broken; verify before you invest time in debugging. For the mathematically inclined, for a complete induction it is essential to prove the base case before doing the induction step.\nMeasuring has its costs or there ain\u0026rsquo;t no such thing as a free lunch. When looking at metrics, surveying the data will change the data from what it would have been – reminds me of the uncertainty principle, somehow.\nWhat\u0026rsquo;s next I will keep my weird RAID configuration (for now), in case it did help. I am comfortable with dealing with potential fails that might occur. I moved the HDDs to the slots away from the mainboard to reduce heat radiating to them. I will keep the advanced/deep sleep configuration since there was no observable benefit from disabling deep sleep, if ssh-ing would wake up the HDDs anyways. I still do not understand this behavior and if anybody has an idea and how to fix it, please let me know.\nPS: I am aware that constantly spinning disks might not wear out as fast but this is a risk I am willing to take right now.\n","permalink":"https://www.relg.uk/posts/silent-synology/","summary":"I recently revived my Synology D415+ NAS from silicon death and it looks like it works fine again. When I bought it, I wanted to be able to run any docker image. Which is why I opted for Atom instead of ARM. Which is also why I upgraded RAM to 8GB. The disks basically never spun down which made it quite noisy. Now, I just want it to be silent, if not in use.","title":"Silent Synology"},{"content":"Recently re-inspired to start to blog, I decided to open – same as Jay Faulkner – with a meta post about why, what to expect, and how I (will) do it.\nWhy I Want to Blog If I start to learn a new topic, I feel like a total beginner. But the more I learn about something, the more I can draw from related topics to generate a more complete understanding of how it works. We all go through this. But at which point is it okay to talk about it as if you were knowledgable about the topic? I would say, do it earlier than you think, be honest about your state of understanding, and do not be afraid to be wrong (as long as it does not kill anyone). Writing is understanding.\nWhen you write – or speak – about a topic several things happen. You are forced to form complete sentences and express the idea as clear as you can. While you do, you might discover that you are still missing pieces or that your current understanding is wrong is some way. Another thing you might notice is, that you are unsure, if it is correct. Again, do not be afraid to be wrong but take the opportunity to learn more. Maybe there is another way to look at the concept that might be easier to explain. Writing about topic or concept can be helpful to someone reading it as well as writing about the learning experiences itself. My hope is to write about topics where I am on the way up from the valley of despair (Dunning–Kruger effect) or make the valley not as deep. I currently only write into my personal notes – mainly for documentation and findability. But it is too easy to just jot down bullet points and not actually understanding what you have written. I hope blogging deepens my understanding of things and also helps others understand the topic a little bit better.\nInspiration I read some other tech blogs like Florian Haas, Michael Stapelberg, and Kristian Köhntopp. I hugely respect all of them and enjoy their different content. I also enjoy the content liveoverflow produces on YouTube.\nWhat to Expect There is not set path for what you will find here in the future but I have some rough ideas what topics to cover. Subject to change but stuff I currently thing about:\n debugging issues and learning experiences git, gnupg, gaming on Linux, i3, restic and systemd, scripts, vim, zsh Obsidian: documentation, note taking maybe opinions: remote work eventually: slides to talks  How I Blog Most importantly – since this is something new to me – irregular and opportunistic. If I find something interesting enough, you will find it here.\nOn the technical side: The repo syphdias.github.io contains this page\u0026rsquo;s contents as markdown files and configuration files. GitHub Actions are being used to use hugo with the theme PaperMod to generate a static page on the branch gh-pages. It is then hosted by GitHub Pages.\nThere is a RSS/Atom feed you can use and I might enable comments if I am in the mood.\nIf you find mistakes in any of my posts, feel free to contribute a pull request.\n","permalink":"https://www.relg.uk/posts/starting-to-blog/","summary":"Recently re-inspired to start to blog, I decided to open – same as Jay Faulkner – with a meta post about why, what to expect, and how I (will) do it.\nWhy I Want to Blog If I start to learn a new topic, I feel like a total beginner. But the more I learn about something, the more I can draw from related topics to generate a more complete understanding of how it works.","title":"Starting to Blog"}]